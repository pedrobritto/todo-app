{"version":3,"sources":["components/TodoContainer/helpers.js","components/TodoInput/index.jsx","components/UI/Checkbox/index.jsx","components/TodoList/index.jsx","components/TodoContainer/index.jsx","App.js","index.js"],"names":["setStoreTodos","payload","localStorage","setItem","JSON","stringify","TodoInput","props","handleInput","inputValue","handleSubmit","className","action","type","value","onChange","placeholder","onClick","UICheckbox","label","id","defaultChecked","htmlFor","RenderTodoList","todos","handleCheckItem","handleRemoveClickedItem","listCx","cx","map","todo","key","completed","toString","TodoList","handleRemoveCompleted","incompleteTodos","filter","completeTodos","hasTodos","length","Fragment","role","aria-label","TodoContainer","getItem","useState","setInputValue","parse","setTodos","event","target","preventDefault","updatedTodos","String","Date","now","clickedItemId","closest","clickedTodoIndex","findIndex","todosCopy","remainingTodos","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ae86eb.chunk.js","sourcesContent":["export const initTodoStore = () => {\n  if (!localStorage.getItem(\"todos\")) {\n    localStorage.setItem(\"todos\", JSON.stringify([]));\n  }\n};\n\nexport const cleanTodoStore = () => {\n  localStorage.setItem(\"todos\", JSON.stringify([]));\n};\n\nexport const getStoreTodos = () => {\n  return JSON.parse(localStorage.getItem(\"todos\"));\n};\n\nexport const setStoreTodos = payload => {\n  localStorage.setItem(\"todos\", JSON.stringify(payload));\n};\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst TodoInput = props => {\n  const { handleInput, inputValue, handleSubmit } = props;\n\n  return (\n    <div className=\"TodoInput__container\">\n      <form action=\"\">\n        <input\n          className=\"TodoInput__input\"\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInput}\n          placeholder=\"What you want to do now?\"\n        />\n\n        <div>\n          <button type=\"submit\" className=\"TodoInput__button\" onClick={handleSubmit}>\n            Add new todo\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default TodoInput;\n","import React from \"react\";\n\nimport \"./style.scss\";\n\nconst UICheckbox = props => {\n  const { label, id, defaultChecked, onChange } = props;\n\n  return (\n    <div className=\"CheckboxContainer\">\n      <input\n        className=\"CheckboxInput TodoList__input\"\n        id={id}\n        type=\"checkbox\"\n        onChange={onChange}\n        defaultChecked={defaultChecked}\n      />\n\n      {label && (\n        <label className=\"CheckboxLabel TodoList__label\" htmlFor={id}>\n          {label}\n        </label>\n      )}\n    </div>\n  );\n};\n\nexport default UICheckbox;\n","import React from \"react\";\n\nimport \"./style.scss\";\nimport cx from \"classnames\";\n\nimport UICheckbox from \"components/UI/Checkbox\";\n\nconst TodoList = props => {\n  const { todos, handleCheckItem, handleRemoveCompleted, handleRemoveClickedItem } = props;\n\n  const incompleteTodos = todos.filter(todo => todo.completed === false);\n  const completeTodos = todos.filter(todo => todo.completed === true);\n\n  const hasTodos = todos.length > 0;\n\n  return (\n    <div className=\"TodoList__container\">\n      {hasTodos ? (\n        <React.Fragment>\n          {incompleteTodos.length > 0 && (\n            <header className=\"completed-todos__header\">\n              <h3 className=\"completed-todos__title\">Todo tasks</h3>\n            </header>\n          )}\n\n          <RenderTodoList\n            todos={incompleteTodos}\n            handleCheckItem={handleCheckItem}\n            handleRemoveClickedItem={handleRemoveClickedItem}\n          />\n\n          {incompleteTodos.length > 0 && completeTodos.length > 0 && <div className=\"Separator\" />}\n\n          {completeTodos.length > 0 && (\n            <header className=\"completed-todos__header\">\n              <h3 className=\"completed-todos__title\">Completed tasks</h3>\n              <button className=\"completed-todos__button\" onClick={handleRemoveCompleted}>\n                Remove completed tasks\n              </button>\n            </header>\n          )}\n\n          <RenderTodoList\n            className=\"completed\"\n            todos={completeTodos}\n            handleCheckItem={handleCheckItem}\n            handleRemoveClickedItem={handleRemoveClickedItem}\n          />\n        </React.Fragment>\n      ) : (\n        <div className=\"TodoList__empty\">\n          <span role=\"img\" aria-label=\"Rolling eyes emoji\">\n            🙄\n          </span>{\" \"}\n          You have nothing to do yet...\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst RenderTodoList = ({\n  todos = [],\n  className = \"\",\n  handleCheckItem,\n  handleRemoveClickedItem\n}) => {\n  const listCx = cx(\"TodoList__list\", className);\n\n  return (\n    <ul className={listCx}>\n      {todos.map(todo => {\n        return (\n          <li\n            className=\"TodoList__item\"\n            key={todo.id}\n            id={todo.id}\n            completed={todo.completed.toString()}\n          >\n            <UICheckbox\n              label={todo.todo}\n              id={`todo-${todo.id}-input`}\n              defaultChecked={todo.completed}\n              onChange={handleCheckItem}\n            />\n\n            <div className=\"TodoList__remove\" onClick={handleRemoveClickedItem}>\n              &#x02A2F;\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from \"react\";\n\nimport \"./style.scss\";\n\nimport { initTodoStore, getStoreTodos, setStoreTodos } from \"./helpers\";\n\nimport TodoInput from \"components/TodoInput\";\nimport TodoList from \"components/TodoList\";\n\nconst TodoContainer = () => {\n  initTodoStore();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [todos, setTodos] = useState(getStoreTodos());\n\n  const handleInput = event => {\n    const { target } = event;\n\n    setInputValue(target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue === \"\") {\n      return;\n    }\n\n    setInputValue(\"\");\n\n    const updatedTodos = [\n      ...todos,\n      {\n        id: String(Date.now()),\n        todo: inputValue,\n        completed: false\n      }\n    ];\n\n    setTodos(updatedTodos);\n    setStoreTodos(updatedTodos);\n  };\n\n  const handleCheckItem = event => {\n    const clickedItem = event.target.closest(\"li\");\n    const clickedItemId = clickedItem.id;\n    const clickedTodoIndex = todos.findIndex(todo => todo.id === clickedItemId);\n    const todosCopy = [...todos];\n\n    todosCopy[clickedTodoIndex].completed = !todosCopy[clickedTodoIndex].completed;\n    setTodos(todosCopy);\n    setStoreTodos(todosCopy);\n  };\n\n  const handleRemoveCompleted = () => {\n    const incompleteTodos = todos.filter(todo => !todo.completed);\n\n    setTodos(incompleteTodos);\n    setStoreTodos(incompleteTodos);\n  };\n\n  const handleRemoveClickedItem = event => {\n    const clickedItem = event.target.closest(\"li\");\n    const clickedItemId = clickedItem.id;\n    const remainingTodos = todos.filter(todo => todo.id !== clickedItemId);\n\n    setTodos(remainingTodos);\n    setStoreTodos(remainingTodos);\n  };\n\n  return (\n    <div className=\"TodoContainer\">\n      <h1 className=\"TodoContainer__title\">\n        <span role=\"img\" aria-label=\"Note emoji\">\n          📝\n        </span>{\" \"}\n        Simple Todo App\n      </h1>\n\n      <TodoInput handleInput={handleInput} inputValue={inputValue} handleSubmit={handleSubmit} />\n      <TodoList\n        todos={todos}\n        handleCheckItem={handleCheckItem}\n        handleRemoveCompleted={handleRemoveCompleted}\n        handleRemoveClickedItem={handleRemoveClickedItem}\n      />\n    </div>\n  );\n};\n\nexport default TodoContainer;\n","import React from \"react\";\n\nimport TodoContainer from \"components/TodoContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <TodoContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"assets/sass/main.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}